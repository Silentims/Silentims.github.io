"use strict";(self.webpackChunkswbook=self.webpackChunkswbook||[]).push([[743],{3018:(e,t,r)=>{r.r(t),r.d(t,{data:()=>s});const s={key:"v-329d316b",path:"/interview/interview-all.html",title:"Redis",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"数据结构",slug:"数据结构",children:[{level:3,title:"概念学习",slug:"概念学习",children:[]},{level:3,title:"面试题",slug:"面试题",children:[]}]}],filePathRelative:"interview/interview-all.md"}},8987:(e,t,r)=>{r.r(t),r.d(t,{default:()=>i});const s=(0,r(6252).uE)('<h1 id="redis" tabindex="-1"><a class="header-anchor" href="#redis" aria-hidden="true">#</a> Redis</h1><p><strong>redis的简单框架</strong></p><p>访问框架（动态库、网络访问框架）、操作模块（PUT/GET/SACN/DELETE）、索引模块、存储模块（持久化）</p><p><strong>两大维度</strong></p><p>应用维度（数据结构应用、缓存应用、集群应用）、系统维度</p><h2 id="数据结构" tabindex="-1"><a class="header-anchor" href="#数据结构" aria-hidden="true">#</a> <strong>数据结构</strong></h2><h3 id="概念学习" tabindex="-1"><a class="header-anchor" href="#概念学习" aria-hidden="true">#</a> 概念学习</h3><p>5种，string、list、hash、sortset、set</p><p>怎么记：</p><ul><li><p>string-简单动态字符串</p></li><li><p>list、hash、sortset都基于压缩列表，其实都基于数组，也就是列表，压缩列表的优点就是节约内存，并且是连续内存，减少内存碎片；<strong>那什么时候用呢</strong>（包含少量的元素值，并且值是小整数值或者长度比较短的字符串，redis会使用压缩列表zlist来实现）</p><p>拓展一下压缩列表：由多个节点组成，每个节点由三部分：previous_entry_length + encoding + content组成，分别作用是记录前一个节点的长度，记录当前节点content保存的数据类型和长度，保存当前节点记录的值</p></li><li><p>各自都有独特的结构：</p><p>list还有双向链表；</p><p>hash还有哈希表；</p><p>sortset还有跳表；</p><p>set没有采用压缩列表，但是有哈希表和整数数组</p></li></ul><h3 id="面试题" tabindex="-1"><a class="header-anchor" href="#面试题" aria-hidden="true">#</a> 面试题</h3><p>1~11题参考：https://cloud.tencent.com/developer/article/1710467</p><p><strong>1.说说redis基本数据类型有哪些吧</strong></p><p>Tips：5种基础数据类型，共7种基础数据结构，注意回答每种基础数据结构的特点，为什么redis这么设计来使用？</p><p><strong>2.</strong></p>',15),i={render:function(e,t){return s}}}}]);