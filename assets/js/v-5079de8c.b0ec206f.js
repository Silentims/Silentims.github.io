"use strict";(self.webpackChunkswbook=self.webpackChunkswbook||[]).push([[262],{8588:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-5079de8c",path:"/java/java-list-Arraylist.html",title:"ArrayList",lang:"zh-CN",frontmatter:{sidebar:"auto"},excerpt:"",headers:[{level:2,title:"类图",slug:"类图",children:[]},{level:2,title:"基本用法",slug:"基本用法",children:[]},{level:2,title:"源码摘要(部分)",slug:"源码摘要-部分",children:[]},{level:2,title:"知识要点",slug:"知识要点",children:[]},{level:2,title:"疑问点",slug:"疑问点",children:[]},{level:2,title:"参考",slug:"参考",children:[]}],filePathRelative:"java/java-list-Arraylist.md"}},7515:(n,s,a)=>{a.r(s),a.d(s,{default:()=>Z});var e=a(6252),t=a(1253),l=a(8206);const c=(0,e._)("h1",{id:"arraylist",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#arraylist","aria-hidden":"true"},"#"),(0,e.Uk)(" ArrayList")],-1),o=(0,e._)("h2",{id:"类图",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#类图","aria-hidden":"true"},"#"),(0,e.Uk)(" 类图")],-1),p=(0,e._)("p",null,[(0,e._)("img",{src:t,alt:"image-20210815211230613"})],-1),k=(0,e._)("h2",{id:"基本用法",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#基本用法","aria-hidden":"true"},"#"),(0,e.Uk)(" 基本用法")],-1),_=(0,e._)("p",null,"ArrayList是一个泛型容器，新建ArrayList需要实例化泛型参数。",-1),u=(0,e._)("div",{class:"language-java ext-java line-numbers-mode"},[(0,e._)("pre",{class:"language-java"},[(0,e._)("code",null,[(0,e._)("span",{class:"token class-name"},"ArrayList"),(0,e._)("span",{class:"token generics"},[(0,e._)("span",{class:"token punctuation"},"<"),(0,e._)("span",{class:"token class-name"},"Integer"),(0,e._)("span",{class:"token punctuation"},">")]),(0,e.Uk)(" intList "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"new"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"ArrayList"),(0,e._)("span",{class:"token generics"},[(0,e._)("span",{class:"token punctuation"},"<"),(0,e._)("span",{class:"token class-name"},"Integer"),(0,e._)("span",{class:"token punctuation"},">")]),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token class-name"},"ArrayList"),(0,e._)("span",{class:"token generics"},[(0,e._)("span",{class:"token punctuation"},"<"),(0,e._)("span",{class:"token class-name"},"String"),(0,e._)("span",{class:"token punctuation"},">")]),(0,e.Uk)(" strList "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"new"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"ArrayList"),(0,e._)("span",{class:"token generics"},[(0,e._)("span",{class:"token punctuation"},"<"),(0,e._)("span",{class:"token class-name"},"String"),(0,e._)("span",{class:"token punctuation"},">")]),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br")])],-1),i=(0,e._)("p",null,"具体常用的方法：",-1),r=(0,e._)("div",{class:"language-java ext-java line-numbers-mode"},[(0,e._)("pre",{class:"language-java"},[(0,e._)("code",null,[(0,e._)("span",{class:"token keyword"},"public"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"boolean"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"add"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token class-name"},"E"),(0,e.Uk)(" e"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token comment"},"//添加元素到末尾"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"public"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"boolean"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"isEmpty"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token comment"},"//判断是否为空"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"public"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"size"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token comment"},"//获取长度"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"public"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"E"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"get"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" index"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token comment"},"//访问指定位置的元素"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"public"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"indexOf"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token class-name"},"Object"),(0,e.Uk)(" o"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token comment"},"//查找元素, 如果找到，返回索引位置，否则返回-1"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"public"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"lastIndexOf"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token class-name"},"Object"),(0,e.Uk)(" o"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token comment"},"//从后往前找"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"public"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"boolean"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"contains"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token class-name"},"Object"),(0,e.Uk)(" o"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token comment"},"//是否包含指定元素,依据是equals方法的返回值"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"public"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"E"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"remove"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" index"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token comment"},"//删除指定位置的元素, 返回值为被删对象"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"public"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"boolean"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"remove"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token class-name"},"Object"),(0,e.Uk)(" o"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token comment"},"//删除指定对象，只删除第一个相同的对象，返回值表示是否删除了元素，如果o为null，则删除值为null的元素"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"public"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"void"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"clear"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token comment"},"//删除所有元素"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"public"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"void"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"add"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" index"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"E"),(0,e.Uk)(" element"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token comment"},"//在指定位置插入元素，index为0表示插入最前面，index为ArrayList的长度表示插到最后面"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"public"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"E"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"set"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" index"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"E"),(0,e.Uk)(" element"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token comment"},"//修改指定位置的元素内容"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"5"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"6"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"7"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"8"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"9"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"10"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"11"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"12"),(0,e._)("br")])],-1),m=(0,e._)("h2",{id:"源码摘要-部分",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#源码摘要-部分","aria-hidden":"true"},"#"),(0,e.Uk)(" 源码摘要(部分)")],-1),U=(0,e._)("ul",null,[(0,e._)("li",null,"数据结构")],-1),b=(0,e._)("div",{class:"language-java ext-java line-numbers-mode"},[(0,e._)("pre",{class:"language-java"},[(0,e._)("code",null,[(0,e._)("span",{class:"token keyword"},"transient"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"Object"),(0,e._)("span",{class:"token punctuation"},"["),(0,e._)("span",{class:"token punctuation"},"]"),(0,e.Uk)(" elementData"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"private"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" size"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br")])],-1),d=(0,e._)("p",null,[(0,e._)("code",null,"elementData"),(0,e.Uk)("表示存储 Arraylist 元素的数组缓冲区。Arraylist 的容量是此数组缓冲区的长度。添加第一个元素时，任何为空的 Arraylist 都将扩展为默认容量（默认容量为 10）。")],-1),y=(0,e._)("p",null,[(0,e._)("code",null,"size"),(0,e.Uk)(" 表示 ArrayList 的大小（它包含的元素数）。")],-1),w=(0,e._)("ul",null,[(0,e._)("li",null,"构造函数")],-1),h=(0,e._)("div",{class:"language-java ext-java line-numbers-mode"},[(0,e._)("pre",{class:"language-java"},[(0,e._)("code",null,[(0,e._)("span",{class:"token keyword"},"public"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"ArrayList"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"//构造一个容量为 0 的空列表，即 elementData = {}"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"public"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"ArrayList"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" initialCapacity"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"//构造具有指定初始容量大小的空列表。"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"public"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"ArrayList"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token class-name"},"Collection"),(0,e._)("span",{class:"token generics"},[(0,e._)("span",{class:"token punctuation"},"<"),(0,e._)("span",{class:"token operator"},"?"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"extends"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"E"),(0,e._)("span",{class:"token punctuation"},">")]),(0,e.Uk)(" c"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"5"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"6"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"7"),(0,e._)("br")])],-1),g=(0,e._)("ul",null,[(0,e._)("li",null,"add() 增加元素")],-1),v=(0,e._)("div",{class:"language-java ext-java line-numbers-mode"},[(0,e._)("pre",{class:"language-java"},[(0,e._)("code",null,[(0,e._)("span",{class:"token keyword"},"public"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"boolean"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"add"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token class-name"},"E"),(0,e.Uk)(" e"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  \t"),(0,e._)("span",{class:"token comment"},"//① "),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token function"},"ensureCapacityInternal"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("size "),(0,e._)("span",{class:"token operator"},"+"),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("  "),(0,e._)("span",{class:"token comment"},"// Increments modCount!!"),(0,e.Uk)("\n    elementData"),(0,e._)("span",{class:"token punctuation"},"["),(0,e.Uk)("size"),(0,e._)("span",{class:"token operator"},"++"),(0,e._)("span",{class:"token punctuation"},"]"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(" e"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(),(0,e._)("span",{class:"token boolean"},"true"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token comment"},"//① 其中调用ensureCapacityInternal确保数组容量是够的，ensureCapacityInternal的代码是"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"private"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"void"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"ensureCapacityInternal"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" minCapacity"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  \t"),(0,e._)("span",{class:"token comment"},"//先判断数组是不是空的，如果是空的，则首次至少要分配的大小为DEFAULT_CAPACITY(默认值为10)"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token keyword"},"if"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("elementData "),(0,e._)("span",{class:"token operator"},"=="),(0,e.Uk)(" EMPTY_ELEMENTDATA"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n        minCapacity "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"Math"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"max"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("DEFAULT_CAPACITY"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" minCapacity"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n  \t"),(0,e._)("span",{class:"token comment"},"//②"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token function"},"ensureExplicitCapacity"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("minCapacity"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token comment"},"// ② 接下来调用ensureExplicitCapacity，主要代码为"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"private"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"void"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"ensureExplicitCapacity"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" minCapacity"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  \t"),(0,e._)("span",{class:"token comment"},"//增加修改次数"),(0,e.Uk)("\n    modCount"),(0,e._)("span",{class:"token operator"},"++"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n    "),(0,e._)("span",{class:"token comment"},"// overflow-conscious code"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("minCapacity "),(0,e._)("span",{class:"token operator"},"-"),(0,e.Uk)(" elementData"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("length "),(0,e._)("span",{class:"token operator"},">"),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"0"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n      "),(0,e._)("span",{class:"token comment"},"//③"),(0,e.Uk)("\n      "),(0,e._)("span",{class:"token function"},"grow"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("minCapacity"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token comment"},"// ③ 如果需要的长度大于当前数组的长度，则调用grow方法，其主要代码为："),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"private"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"void"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"grow"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" minCapacity"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token comment"},"// overflow-conscious code"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" oldCapacity "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(" elementData"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("length"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token comment"},"//右移一位相当于除2，所以，newCapacity相当于oldCapacity的1.5倍"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" newCapacity "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(" oldCapacity "),(0,e._)("span",{class:"token operator"},"+"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("oldCapacity "),(0,e._)("span",{class:"token operator"},">>"),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token comment"},"//如果扩展1.5倍还是小于minCapacity，就扩展为minCapacity”"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("newCapacity "),(0,e._)("span",{class:"token operator"},"-"),(0,e.Uk)(" minCapacity "),(0,e._)("span",{class:"token operator"},"<"),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"0"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n      \tnewCapacity "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(" minCapacity"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("newCapacity "),(0,e._)("span",{class:"token operator"},"-"),(0,e.Uk)(" MAX_ARRAY_SIZE "),(0,e._)("span",{class:"token operator"},">"),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"0"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n      \tnewCapacity "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"hugeCapacity"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("minCapacity"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token comment"},"// minCapacity is usually close to size, so this is a win:"),(0,e.Uk)("\n    elementData "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"Arrays"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"copyOf"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("elementData"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" newCapacity"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"5"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"6"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"7"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"8"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"9"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"10"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"11"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"12"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"13"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"14"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"15"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"16"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"17"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"18"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"19"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"20"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"21"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"22"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"23"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"24"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"25"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"26"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"27"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"28"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"29"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"30"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"31"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"32"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"33"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"34"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"35"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"36"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"37"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"38"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"39"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"40"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"41"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"42"),(0,e._)("br")])],-1),f=(0,e._)("p",null,"除了 add()，还有",-1),C=(0,e._)("p",null,[(0,e.Uk)("​ "),(0,e._)("code",null,"add(int index, E element)"),(0,e.Uk)("：需要先整体移动 index 后的数据，然后插入，若超过当前长度，则扩容")],-1),A=(0,e._)("p",null,[(0,e.Uk)("​ "),(0,e._)("code",null,"addAll(Collection<? extends E> c)"),(0,e.Uk)("：与 add()类似，只是一次性插入多个元素在数组列表末尾，若超过当前长度，则扩容")],-1),x=(0,e._)("p",null,[(0,e.Uk)("​ "),(0,e._)("code",null,"addAll(int index, Collection<? extends E> c)"),(0,e.Uk)("：在指定位置插入多个元素，若超过当前长度，则扩容")],-1),j=(0,e._)("ul",null,[(0,e._)("li",null,"remove() 移除元素")],-1),E=(0,e._)("div",{class:"language-java ext-java line-numbers-mode"},[(0,e._)("pre",{class:"language-java"},[(0,e._)("code",null,[(0,e._)("span",{class:"token keyword"},"public"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"E"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"remove"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" index"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token function"},"rangeCheck"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("index"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n  modCount"),(0,e._)("span",{class:"token operator"},"++"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token class-name"},"E"),(0,e.Uk)(" oldValue "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"elementData"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("index"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"//计算要移动的元素个数"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" numMoved "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(" size "),(0,e._)("span",{class:"token operator"},"-"),(0,e.Uk)(" index "),(0,e._)("span",{class:"token operator"},"-"),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("numMoved "),(0,e._)("span",{class:"token operator"},">"),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"0"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token comment"},"//移除元素"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token class-name"},"System"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"arraycopy"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("elementData"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" index"),(0,e._)("span",{class:"token operator"},"+"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" elementData"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" index"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" numMoved"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"//将size减1，同时释放引用以便原对象被垃圾回收"),(0,e.Uk)("\n  elementData"),(0,e._)("span",{class:"token punctuation"},"["),(0,e._)("span",{class:"token operator"},"--"),(0,e.Uk)("size"),(0,e._)("span",{class:"token punctuation"},"]"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"null"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)(),(0,e._)("span",{class:"token comment"},"// clear to let GC do its work"),(0,e.Uk)("\n\n  "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(" oldValue"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"5"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"6"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"7"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"8"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"9"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"10"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"11"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"12"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"13"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"14"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"15"),(0,e._)("br")])],-1),L=(0,e._)("p",null,"eg :移除数组列表中index = 2 的元素，图解：",-1),D=(0,e._)("p",null,[(0,e._)("img",{src:l,alt:"image-20210815200641587"})],-1),O=(0,e._)("h2",{id:"知识要点",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#知识要点","aria-hidden":"true"},"#"),(0,e.Uk)(" 知识要点")],-1),z=(0,e._)("ul",null,[(0,e._)("li",null,"ArrayList 就是数组列表，底层数据结构是数组Object [] elementData。"),(0,e._)("li",null,"如果装载的是 8 种基础类型时，只能存储对应的包装类（为什么？往底层了说，因为定义在方法中局部变量的基础类型是存在栈中的，随着方法出栈则会回收，而堆中存的是对象，在未被引用时回收，所以通过包装类把基础类型转为对象，存放引用就可以解决这个问题）。"),(0,e._)("li",null,"特点：查找和访问元素的速度较快，但新增，删除的速度较慢（为什么查询快，因为通过数组下标即可找到对应元素，并且数组是一段连续的内存空间，CPU 缓存机制也会缓存连续片段）"),(0,e._)("li",null,"为了查询执行效率，未做同步，即线程不安全（要想安全可以用 Vector，想增删快用 LinkedList）。"),(0,e._)("li",null,"ArraryList 默认构造函数初始化为空数组，在首次 add 时进行初始化大小，默认值为 10；若指定大小，则初始化为指定大小的数组。"),(0,e._)("li",null,"触发数组容量变化的时机：一是为空数组列表 add 元素时初始化数组容量为 10，二是新增元素发现数组容量不足，会扩容至原数组 1.5 倍（jdk8 采用右移一位的位运算，进一步优化了速度）")],-1),I=(0,e._)("h2",{id:"疑问点",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#疑问点","aria-hidden":"true"},"#"),(0,e.Uk)(" 疑问点")],-1),T=(0,e.Uk)("数据类型中，为什么 elementData 的类型是 transient ？"),M=(0,e.Uk)("add() 和 remove()中，都有"),W=(0,e._)("code",null,"modCount++;",-1),P=(0,e.Uk)("，作用是什么 ？"),Y=(0,e._)("p",null,"可参考：",-1),B={href:"https://www.cnblogs.com/zuochengsi-9/p/7050351.html",target:"_blank",rel:"noopener noreferrer"},S=(0,e.Uk)("ArrayList 中 modCount 的作用"),R={href:"https://mrcame.github.io/2017/02/27/Java%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A04/",target:"_blank",rel:"noopener noreferrer"},V=(0,e.Uk)("ArrayList 中的 modCount 变量"),F=(0,e._)("h2",{id:"参考",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#参考","aria-hidden":"true"},"#"),(0,e.Uk)(" 参考")],-1),J={href:"https://www.cnblogs.com/swiftma/p/5894874.html",target:"_blank",rel:"noopener noreferrer"},N=(0,e.Uk)("《Java 编程的逻辑》 - 剖析 ArrayList"),q={href:"https://www.pdai.tech/md/java/collection/java-collection-ArrayList.html",target:"_blank",rel:"noopener noreferrer"},G=(0,e.Uk)("Collection - ArrayList 源码解析"),H={href:"https://zhuanlan.zhihu.com/p/101574379",target:"_blank",rel:"noopener noreferrer"},X=(0,e.Uk)("《进大厂系列》系列 - ArrayList"),Z={render:function(n,s){const a=(0,e.up)("Badge"),t=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[c,o,p,k,_,u,i,r,m,U,b,d,y,w,h,g,v,f,C,A,x,j,E,L,D,O,z,I,(0,e._)("ul",null,[(0,e._)("li",null,[(0,e._)("p",null,[T,(0,e.Wm)(a,{type:"danger",text:"TODO",vertical:"top"})])]),(0,e._)("li",null,[(0,e._)("p",null,[M,W,P,(0,e.Wm)(a,{type:"danger",text:"TODO",vertical:"top"})]),Y,(0,e._)("p",null,[(0,e._)("a",B,[S,(0,e.Wm)(t)])]),(0,e._)("p",null,[(0,e._)("a",R,[V,(0,e.Wm)(t)])])])]),F,(0,e._)("ul",null,[(0,e._)("li",null,[(0,e._)("a",J,[N,(0,e.Wm)(t)])]),(0,e._)("li",null,[(0,e._)("a",q,[G,(0,e.Wm)(t)])]),(0,e._)("li",null,[(0,e._)("a",H,[X,(0,e.Wm)(t)])])])],64)}}},8206:(n,s,a)=>{n.exports=a.p+"assets/img/image-20210815200641587.c9a6e0f3.png"},1253:(n,s,a)=>{n.exports=a.p+"assets/img/image-20210815211230613.40b1e929.png"}}]);