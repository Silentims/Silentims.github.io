"use strict";(self.webpackChunkswbook=self.webpackChunkswbook||[]).push([[739],{7596:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-2d959e06",path:"/blog/vuepress-doc.html",title:"VuePress2.x 搭建与自动化部署",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"一、依赖环境准备",slug:"一、依赖环境准备",children:[{level:3,title:"Node.js 下载与安装",slug:"node-js-下载与安装",children:[]},{level:3,title:"Git 下载与安装",slug:"git-下载与安装",children:[]}]},{level:2,title:"二、使用工具准备",slug:"二、使用工具准备",children:[{level:3,title:"VSCode 下载与安装",slug:"vscode-下载与安装",children:[]},{level:3,title:"VSCode 插件推荐",slug:"vscode-插件推荐",children:[]}]},{level:2,title:"三、VuePress 安装",slug:"三、vuepress-安装",children:[{level:3,title:"项目创建",slug:"项目创建",children:[]},{level:3,title:"主题配置",slug:"主题配置",children:[]},{level:3,title:"本地调试",slug:"本地调试",children:[]},{level:3,title:"代码托管",slug:"代码托管",children:[]}]},{level:2,title:"四、自动化部署",slug:"四、自动化部署",children:[{level:3,title:"创建脚本",slug:"创建脚本",children:[]},{level:3,title:"配置脚本",slug:"配置脚本",children:[]},{level:3,title:"执行脚本",slug:"执行脚本",children:[]},{level:3,title:"网站访问",slug:"网站访问",children:[]}]},{level:2,title:"五、云服务器域名访问",slug:"五、云服务器域名访问",children:[{level:3,title:"域名注册",slug:"域名注册",children:[]},{level:3,title:"域名解析",slug:"域名解析",children:[]},{level:3,title:"证书申请",slug:"证书申请",children:[]},{level:3,title:"Nginx安装与配置",slug:"nginx安装与配置",children:[]}]}],filePathRelative:"blog/vuepress-doc.md",git:{updatedTime:1628754801e3,contributors:[]}}},7934:(n,s,a)=>{a.r(s),a.d(s,{default:()=>Xn});var e=a(6252);const p=(0,e._)("h1",{id:"vuepress2-x-搭建与自动化部署",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#vuepress2-x-搭建与自动化部署","aria-hidden":"true"},"#"),(0,e.Uk)(" VuePress2.x 搭建与自动化部署")],-1),l={class:"custom-container warning"},t=(0,e._)("p",{class:"custom-container-title"},"写在前面",-1),c=(0,e.Uk)("之前陆续折腾过很多静态博客，包括 "),o={href:"https://jekyllrb.com/",target:"_blank",rel:"noopener noreferrer"},r=(0,e.Uk)("Jekyll"),i=(0,e.Uk)("、"),u={href:"https://hexo.io/zh-cn/",target:"_blank",rel:"noopener noreferrer"},b=(0,e.Uk)("Hexo"),m=(0,e.Uk)("、"),d={href:"http://typecho.org/",target:"_blank",rel:"noopener noreferrer"},k=(0,e.Uk)("Typecho"),h=(0,e.Uk)("，现在又转到 "),g={href:"https://v2.vuepress.vuejs.org/zh/",target:"_blank",rel:"noopener noreferrer"},v=(0,e.Uk)("VuePress"),_=(0,e.Uk)(" 的原因，主要是想建立一个自己的技术知识站，而非时间线的散文式博客网站，正好 VuePress 就很合适，风格也很简洁美观。"),x=(0,e._)("p",null,"所以这篇适用于 VuePress2.x 版本的博客搭建手册，旨在帮助也有这种想法的小伙伴，只需要在本地写好文章，提交，等待自动发布完成，即可访问自己的网站，查看最新发布的文章。",-1),f=(0,e.uE)('<div class="custom-container tip"><p class="custom-container-title">本篇涉及的技术和工具</p><p>VuePress2.x、MacOS/Win 10/CentOS 8、VSCode、Git、Github、Github Actions、Github Pages、Docker、Nginx、云服务器ECS、域名、HTTP 证书</p></div><hr><h2 id="一、依赖环境准备" tabindex="-1"><a class="header-anchor" href="#一、依赖环境准备" aria-hidden="true">#</a> 一、依赖环境准备</h2><h3 id="node-js-下载与安装" tabindex="-1"><a class="header-anchor" href="#node-js-下载与安装" aria-hidden="true">#</a> Node.js 下载与安装</h3>',4),y={class:"custom-container tip"},w=(0,e._)("p",{class:"custom-container-title"},"什么是 Node.js ?",-1),S=(0,e.Uk)("Node.js 是一个开源与跨平台的 JavaScript 运行时环境。 它是一个可用于几乎任何项目的流行工具。在安装 VuePress 之前，需要先安装 Node.js 环境，"),U={href:"https://nodejs.org/zh-cn/",target:"_blank",rel:"noopener noreferrer"},P=(0,e.Uk)("官网地址"),E=(0,e._)("blockquote",null,[(0,e._)("p",null,"已安装 Node.js 可跳过此步骤")],-1),G=(0,e._)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,e._)("pre",{class:"language-bash"},[(0,e._)("code",null,[(0,e._)("span",{class:"token comment"},"# 通过 homebrew 安装"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token comment"},"# 1.检查 brew 版本（若已安装跳至第 3 步）"),(0,e.Uk)("\nbrew -v\n"),(0,e._)("span",{class:"token comment"},"# 2.安装 homebrew"),(0,e.Uk)("\nruby -e "),(0,e._)("span",{class:"token string"},[(0,e.Uk)('"'),(0,e._)("span",{class:"token variable"},[(0,e._)("span",{class:"token variable"},"$("),(0,e._)("span",{class:"token function"},"curl"),(0,e.Uk)(" -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install"),(0,e._)("span",{class:"token variable"},")")]),(0,e.Uk)('"')]),(0,e.Uk)(" \n"),(0,e._)("span",{class:"token comment"},"# 3.安装 node"),(0,e.Uk)("\nbrew "),(0,e._)("span",{class:"token function"},"link"),(0,e.Uk)(" node\nbrew uninstall node\nbrew "),(0,e._)("span",{class:"token function"},"install"),(0,e.Uk)(" node\n"),(0,e._)("span",{class:"token comment"},"# 4.验证 （我的 npm 版本是6.14.10，node 版本是v14.15.0）"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token function"},"npm"),(0,e.Uk)(" -v\nnode -v\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"5"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"6"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"7"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"8"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"9"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"10"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"11"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"12"),(0,e._)("br")])],-1),T=(0,e._)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,e._)("pre",{class:"language-bash"},[(0,e._)("code",null,[(0,e._)("span",{class:"token comment"},"# 可以参考菜鸟教程的安装步骤 "),(0,e.Uk)("\nhttps://www.runoob.com/nodejs/nodejs-install-setup.html\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br")])],-1),C=(0,e._)("h3",{id:"git-下载与安装",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#git-下载与安装","aria-hidden":"true"},"#"),(0,e.Uk)(" Git 下载与安装")],-1),q={class:"custom-container tip"},N=(0,e._)("p",{class:"custom-container-title"},"为什么要使用 Git ？",-1),A=(0,e.Uk)("Git 是一个开源的分布式版本控制系统，用于敏捷高效地管理项目的版本。博客网站也会经常更新和修改文章，所以引入 Git，方便我们管理，详细可查阅"),j={href:"https://git-scm.com/",target:"_blank",rel:"noopener noreferrer"},W=(0,e.Uk)("Git 官网"),H=(0,e.Uk)("。"),I=(0,e._)("blockquote",null,[(0,e._)("p",null,"已安装 Git 可跳过此步骤")],-1),V=(0,e._)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,e._)("pre",{class:"language-bash"},[(0,e._)("code",null,[(0,e._)("span",{class:"token comment"},"# 通过 homebrew 安装"),(0,e.Uk)("\nbrew "),(0,e._)("span",{class:"token function"},"install"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"git"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token comment"},"# 检查 输入后显示可操作的指令列表，表示安装成功"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token function"},"git"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br")])],-1),O=(0,e._)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,e._)("pre",{class:"language-bash"},[(0,e._)("code",null,[(0,e._)("span",{class:"token comment"},"# 待完善"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token comment"},"# 可以先查阅网络主流教程，很全面"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br")])],-1),R=(0,e._)("h2",{id:"二、使用工具准备",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#二、使用工具准备","aria-hidden":"true"},"#"),(0,e.Uk)(" 二、使用工具准备")],-1),L=(0,e._)("h3",{id:"vscode-下载与安装",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#vscode-下载与安装","aria-hidden":"true"},"#"),(0,e.Uk)(" VSCode 下载与安装")],-1),M=(0,e.Uk)("推荐使用微软自家的 VSCode 客户端，点击"),z={href:"https://code.visualstudio.com/download",target:"_blank",rel:"noopener noreferrer"},D=(0,e.Uk)("官网下载"),K=(0,e.Uk)("，VSCode 由于跨平台，登录 Github 或者微软账号后，即可在 Mac 与 Window 系统之间同步插件，配置、主题等，同时又支持 Git、代码高亮、Markdown预览等丰富的插件"),Y=(0,e._)("details",{class:"custom-container details"},[(0,e._)("summary",null,"点击查看 Window 客户端安装建议"),(0,e._)("p",null,[(0,e.Uk)("Windows 版本提供了 system installer 和 user installer 两个下载包，user installer 安装包对系统权限低，使用中会有意想不到的麻烦， system installer 则能畅通无阻。为了避免不必要的麻烦，建议下载"),(0,e._)("code",null,"system installer"),(0,e.Uk)("安装包。")])],-1),$=(0,e._)("h3",{id:"vscode-插件推荐",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#vscode-插件推荐","aria-hidden":"true"},"#"),(0,e.Uk)(" VSCode 插件推荐")],-1),F=(0,e.Uk)("VSCode 推荐的插件 "),B=(0,e.Uk)("适用于 Mac 和 Win10 都好看的字体 "),J=(0,e._)("h2",{id:"三、vuepress-安装",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#三、vuepress-安装","aria-hidden":"true"},"#"),(0,e.Uk)(" 三、VuePress 安装")],-1),Q={class:"custom-container tip"},X=(0,e._)("p",{class:"custom-container-title"},"简介",-1),Z=(0,e.Uk)("VuePress 是一个以 Markdown 为中心的静态网站生成器。你可以使用 "),nn={href:"https://zh.wikipedia.org/wiki/Markdown",target:"_blank",rel:"noopener noreferrer"},sn=(0,e.Uk)("Markdown"),an=(0,e.Uk)(" 来书写内容（如文档、博客等），然后 VuePress 会帮助你生成一个静态网站来展示它们。"),en=(0,e._)("h3",{id:"项目创建",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#项目创建","aria-hidden":"true"},"#"),(0,e.Uk)(" 项目创建")],-1),pn=(0,e.Uk)("此处与官方文档基本一致，详细可以参考官方的"),ln={href:"https://v2.vuepress.vuejs.org/zh/guide/getting-started.html",target:"_blank",rel:"noopener noreferrer"},tn=(0,e.Uk)("快速上手"),cn=(0,e.uE)('<p><strong>步骤 1</strong>: 创建并进入一个新目录</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 创建一个自定义命名的文件夹，此文件夹作为网站项目的根目录</span>\n<span class="token function">mkdir</span> swbook\n<span class="token comment"># 进入项目</span>\n<span class="token builtin class-name">cd</span> swbook\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>步骤 2</strong>: 初始化项目</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 初始化当前项目为一个 git 项目，方便后续管理</span>\n<span class="token function">git</span> init\n<span class="token comment"># 执行过程中会提示设置基础配置信息，一律回车跳过即可，后续可在 package.json中 修改，完成后项目会多一个 package.json 文件</span>\n<span class="token function">npm</span> init\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>步骤 3</strong>: 将 VuePress 安装为本地依赖</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 完成后项目中会生成 package-lock.json 文件和 node_modules 文件夹</span>\n<span class="token function">npm</span> <span class="token function">install</span> -D vuepress@next\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>步骤 4</strong>: 将默认的临时目录和缓存目录添加到 <code>.gitignore</code> 文件中</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 以下命令执行并回车，目的是让 git 忽略，不做版本管理，后续有不需要 Git 管理的也可以添加进来</span>\n<span class="token builtin class-name">echo</span> <span class="token string">&#39;node_modules&#39;</span> <span class="token operator">&gt;&gt;</span> .gitignore\n<span class="token builtin class-name">echo</span> <span class="token string">&#39;.temp&#39;</span> <span class="token operator">&gt;&gt;</span> .gitignore\n<span class="token builtin class-name">echo</span> <span class="token string">&#39;.cache&#39;</span> <span class="token operator">&gt;&gt;</span> .gitignore\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>步骤 5</strong>: 创建你的第一篇文档</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 创建文章目录，此目录会作为以后存放文章的根目录</span>\n<span class="token function">mkdir</span> docs\n<span class="token comment"># 创建一个 markdown 文档，并添加一个一级标题</span>\n<span class="token builtin class-name">echo</span> <span class="token string">&#39;# Hello VuePress&#39;</span> <span class="token operator">&gt;</span> docs/README.md\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>步骤 6</strong>: 用<code>vi</code>命令打开项目中 <code>package.json</code> 文件，找到并替换<code>scripts</code>中的内容为以下</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token string">&quot;docs:dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vuepress dev docs&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;docs:build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vuepress build docs&quot;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="highlight-lines"><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><strong>步骤 7</strong>: 本地启动，来查看和调试你的文档网站</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 确保在目录 swbook 下执行</span>\n<span class="token function">npm</span> run docs:dev\n<span class="token comment"># 出现success VuePress webpack dev server is listening at http://localhost:8080/表示启动成功</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>步骤 8</strong>：打开浏览器，访问 http://localhost:8080，本地搭建成功</p><h3 id="主题配置" tabindex="-1"><a class="header-anchor" href="#主题配置" aria-hidden="true">#</a> 主题配置</h3>',16),on={class:"custom-container tip"},rn=(0,e._)("p",{class:"custom-container-title"},"提示",-1),un=(0,e.Uk)("此处只演示网站首页、顶部导航栏、网站标题栏图标、网站 Logo的简单配置，进阶配置可参考官方的"),bn={href:"https://v2.vuepress.vuejs.org/zh/guide/configuration.html",target:"_blank",rel:"noopener noreferrer"},mn=(0,e.Uk)("主题配置"),dn=(0,e.uE)('<p>在<code>/docs/.vuepress</code>目录下，创建<code>public/images</code>文件夹，以及<code>config.js</code>文件</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 进入.vuepress目录</span>\n<span class="token builtin class-name">cd</span> docs/.vuepress/\n<span class="token comment"># 创建存放网站图片的目录</span>\n<span class="token function">mkdir</span> -p public/images\n<span class="token comment"># 创建 config.js 配置文件</span>\n<span class="token function">touch</span> config.js\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>修改<code>config.js</code>文件内容</p><blockquote><p>此处直接复制下面的基础配置，再根据注释，自行修改和删减</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  lang<span class="token operator">:</span> <span class="token string">&#39;zh-CN&#39;</span><span class="token punctuation">,</span>\t<span class="token comment">//语言</span>\n  title<span class="token operator">:</span> <span class="token string">&#39;SW·BOOK&#39;</span><span class="token punctuation">,</span>\t\t<span class="token comment">//(全局默认)导航栏左上角标题</span>\n  description<span class="token operator">:</span> <span class="token string">&#39;时间会回答成长，成长会回答梦想&#39;</span><span class="token punctuation">,</span>\t<span class="token comment">//(全局默认)描述</span>\n\n  <span class="token comment">// head 可以配置网站标题栏的图标，如果不配置默认显示 vuepress 图标</span>\n  head<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token comment">//支持图片 url 和本地，这里使用本地的相对路径，把准备好的 ico 图标文件复制到/images目录下</span>\n    <span class="token punctuation">[</span><span class="token string">&#39;link&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> rel<span class="token operator">:</span> <span class="token string">&#39;icon&#39;</span><span class="token punctuation">,</span> href<span class="token operator">:</span> <span class="token string">&#39;/images/favicon.ico&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n\n  <span class="token comment">//主题配置 详细可参考https://v2.vuepress.vuejs.org/zh/reference/default-theme/config.html </span>\n  themeConfig<span class="token operator">:</span> <span class="token punctuation">{</span>\n\n    <span class="token comment">//导航栏左侧图标： 图片需要放在 /images 目录下</span>\n    logo<span class="token operator">:</span> <span class="token string">&#39;/images/favicon.ico&#39;</span><span class="token punctuation">,</span>\n\n    \n    <span class="token comment">//导航栏右侧分类：这里的 link 路径对应是在 docs 根目录下，详细配置参考官方，这里容易配置错误</span>\n    navbar<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token comment">// 方式一：NavbarItem</span>\n      <span class="token punctuation">{</span>\n        text<span class="token operator">:</span> <span class="token string">&#39;首页&#39;</span><span class="token punctuation">,</span>\n        link<span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// 方式二：NavbarGroup 嵌套最多 2 层</span>\n      <span class="token punctuation">{</span>\n        text<span class="token operator">:</span> <span class="token string">&#39;分类&#39;</span><span class="token punctuation">,</span>\n        children<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            text<span class="token operator">:</span> <span class="token string">&#39;子类a&#39;</span><span class="token punctuation">,</span>\n            link<span class="token operator">:</span> <span class="token string">&#39;/md/sub-a&#39;</span>\t<span class="token comment">//表示链接到/docs/md/目录下的 sub-a.md 文件，即 /docs作为根目录可省略</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            text<span class="token operator">:</span> <span class="token string">&#39;子类b&#39;</span><span class="token punctuation">,</span>\t\t<span class="token comment">//这里子类b包括两个2 层分类，官方表示最多支持 2 层</span>\n            children<span class="token operator">:</span> <span class="token punctuation">[</span>\n              <span class="token punctuation">{</span>\n                text<span class="token operator">:</span> <span class="token string">&#39;子类b-1&#39;</span><span class="token punctuation">,</span>\n                link<span class="token operator">:</span> <span class="token string">&#39;/md/sub-b-1&#39;</span>  \n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">{</span>\n                text<span class="token operator">:</span> <span class="token string">&#39;子类b-2&#39;</span><span class="token punctuation">,</span>\n                link<span class="token operator">:</span> <span class="token string">&#39;/md/sub-b-2&#39;</span>  \n              <span class="token punctuation">}</span>\n            <span class="token punctuation">]</span>    \n          <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// 方式三：字符串 - 页面文件路径（会自动转换为 NavbarItem，文件路径为 link，文件标题为 text）</span>\n      <span class="token string">&#39;/about.md&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    \n    <span class="token comment">//其他配置...</span>\n  \n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br></div></div><p>由于配置文件中涉及导航栏中的几个测试文章，所以也分别在<code>/docs</code>目录下临时创建几篇文章，为了演示，默认都在这几篇文章添加对应的一级标题即可:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 进入 docs 目录下，创建一个用于存放文章的目录 md</span>\n<span class="token builtin class-name">cd</span> docs\n<span class="token function">mkdir</span> md\n<span class="token comment"># 创建关于页</span>\n<span class="token builtin class-name">echo</span> <span class="token string">&#39;# 关于&#39;</span> <span class="token operator">&gt;</span> about.md\n<span class="token comment"># 创建文章页，并各自添加一个一级标题（此处也可以不通过命令行创建创建）</span>\n<span class="token builtin class-name">cd</span> md\n<span class="token builtin class-name">echo</span> <span class="token string">&#39;# 子类a&#39;</span> <span class="token operator">&gt;</span> sub-a.md\n<span class="token builtin class-name">echo</span> <span class="token string">&#39;# 子类b-1&#39;</span> <span class="token operator">&gt;</span> sub-b-1.md\n<span class="token builtin class-name">echo</span> <span class="token string">&#39;# 子类b-2&#39;</span> <span class="token operator">&gt;</span> sub-b-2.md\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>修改首页文件<code>/docs/README.md</code>中的内容</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token front-matter-block"><span class="token punctuation">---</span>\n<span class="token font-matter yaml language-yaml"><span class="token key atrule">home</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n<span class="token key atrule">heroImage</span><span class="token punctuation">:</span> /images/logo.png\n<span class="token key atrule">actions</span><span class="token punctuation">:</span>\n  <span class="token punctuation">-</span> <span class="token key atrule">text</span><span class="token punctuation">:</span> 点击进入→\n    <span class="token key atrule">link</span><span class="token punctuation">:</span> /about\n    <span class="token key atrule">type</span><span class="token punctuation">:</span> secondary\n<span class="token key atrule">features</span><span class="token punctuation">:</span>\n<span class="token punctuation">-</span> <span class="token key atrule">title</span><span class="token punctuation">:</span> 夯实基础\n  <span class="token key atrule">details</span><span class="token punctuation">:</span> 成功没有捷径，难的是坚持\n<span class="token punctuation">-</span> <span class="token key atrule">title</span><span class="token punctuation">:</span> 提升自我\n  <span class="token key atrule">details</span><span class="token punctuation">:</span> 记录成长，关注过程，持续输出\n<span class="token punctuation">-</span> <span class="token key atrule">title</span><span class="token punctuation">:</span> 构建体系\n  <span class="token key atrule">details</span><span class="token punctuation">:</span> 告别碎片化学习，积累自己的知识体系\n<span class="token key atrule">footerHtml</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n<span class="token key atrule">footer</span><span class="token punctuation">:</span> MIT Licensed <span class="token punctuation">|</span> Copyright © 2017<span class="token punctuation">-</span>present <span class="token punctuation">|</span> @author &lt;/br<span class="token punctuation">&gt;</span>&lt;/br<span class="token punctuation">&gt;</span>&lt;a style=&quot;font<span class="token punctuation">-</span>size<span class="token punctuation">:</span>14px;&quot; href=&quot;http<span class="token punctuation">:</span>//beian.miit.gov.cn/&quot; target=&quot;_blank&quot; <span class="token punctuation">&gt;</span>京ICP备xxx号&lt;/a<span class="token punctuation">&gt;</span></span> \n<span class="token punctuation">---</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div>',9),kn=(0,e.Uk)("更多 markdown 参数（即”---“之间的部分）可参考官方 "),hn={href:"https://v2.vuepress.vuejs.org/zh/reference/frontmatter.html#lang",target:"_blank",rel:"noopener noreferrer"},gn=(0,e.Uk)("Frontmatter 参数说明"),vn=(0,e.uE)('<p>至此，基础的配置已经完成，主要的文件结构如下</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>swbook\t<span class="token comment"># 项目根目录</span>\n├── docs\t<span class="token comment"># 网站内容根目录</span>\n│   ├── .vuepress\t<span class="token comment"># vuepress 目录</span>\n│   │   ├── config.js\t<span class="token comment"># 主配置文件</span>\n│   │   ├── public\t<span class="token comment"># 存放公共静态资源</span>\n│   │   │   └── images\t\n│   │   │       ├── favicon.ico\t<span class="token comment"># 网站标题栏图标</span>\n│   │   │       └── logo.png\t<span class="token comment"># 网站 logo 图片</span>\n│   ├── README.md\t<span class="token comment"># 首页</span>\n│   ├── about.md\t<span class="token comment"># 关于页</span>\n│   └── md\t<span class="token comment"># 文章目录 ps：可以自定义很多同级和子级目录，只要是在 /docs 下即可</span>\n│       ├── sub-a.md\t<span class="token comment"># 文章 1</span>\n│       ├── sub-b-1.md\t<span class="token comment"># 文章 2</span>\n│       └── sub-b-2.md\t<span class="token comment"># 文章 3</span>\n├── package-lock.json\n└── package.json\t<span class="token comment"># 项目配置文件</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="本地调试" tabindex="-1"><a class="header-anchor" href="#本地调试" aria-hidden="true">#</a> 本地调试</h3><p>在本地环境进行编译，运行</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 切换到 swbook 目录</span>\n<span class="token builtin class-name">cd</span> swbook\n<span class="token comment"># 编译运行</span>\n<span class="token function">npm</span> run docs:dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>',5),_n=(0,e.Uk)("网站访问 "),xn={href:"http://localhost:8080/",target:"_blank",rel:"noopener noreferrer"},fn=(0,e.Uk)("http://localhost:8080"),yn=(0,e.Uk)(" 查看效果"),wn=(0,e.uE)('<h3 id="代码托管" tabindex="-1"><a class="header-anchor" href="#代码托管" aria-hidden="true">#</a> 代码托管</h3><div class="custom-container tip"><p class="custom-container-title">为什么要托管 ？</p><p>本地编写好文章后，为了方便备份以及后续自动化部署，需要将本地整个博客网站内容托管至 Github</p></div><h4 id="创建代码仓库" tabindex="-1"><a class="header-anchor" href="#创建代码仓库" aria-hidden="true">#</a> 创建代码仓库</h4>',3),Sn=(0,e.Uk)("登录 "),Un={href:"https://github.com/",target:"_blank",rel:"noopener noreferrer"},Pn=(0,e.Uk)("Github"),En=(0,e.Uk)("，创建一个仓库"),Gn=(0,e._)("code",null,"swbook",-1),Tn=(0,e.Uk)("，如果为了隐私，可以初始化为私库，即 private。"),Cn=(0,e._)("blockquote",null,[(0,e._)("p",null,"因为我这已经创建swbook 仓库，所以图中使用 swbooks 演示，仓库名可随意自定义，无需与项目名相同，但是建议保持一致")],-1),qn=(0,e._)("p",null,"创建成功后，目前是一个空的仓库：",-1),Nn={id:"配置-ssh-连接",tabindex:"-1"},An=(0,e._)("a",{class:"header-anchor",href:"#配置-ssh-连接","aria-hidden":"true"},"#",-1),jn=(0,e.Uk)(" 配置 SSH 连接 "),Wn=(0,e.uE)('<blockquote><p>如果本地以配置 SSH 连接可跳过此步骤</p></blockquote><details class="custom-container details"><summary>Tips 为什么要采用 SSH 来连接？</summary><p>在使用 HTTPS 协议连接 Github 时，使用 git pull、git push 等命令时需要输入密码，频繁拉取和提交时，屡次输入账号密码很不方便，所以使用 SSH 协议实现免密连接，一劳永逸</p></details><ol><li><p>生成公钥和私钥</p></li><li><p>上传公钥到 Github</p></li><li><p>测试连接</p></li></ol><h4 id="首次提交" tabindex="-1"><a class="header-anchor" href="#首次提交" aria-hidden="true">#</a> 首次提交</h4><p>由于是首次提交，需要初始化提交，先进入项目根目录<code>swbook</code>后执行以下 git 命令</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 进入项目根目录</span>\n<span class="token builtin class-name">cd</span> swbook\n<span class="token comment"># 连接私库，将本地的代码添加、提交、推送到远程私库的 master 分支</span>\n<span class="token function">git</span> remote <span class="token function">add</span> origin git@github.com:silentims/swbook.git <span class="token operator">&amp;&amp;</span> <span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span> <span class="token operator">&amp;&amp;</span> <span class="token function">git</span> commit -m <span class="token string">&#39;init&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token function">git</span> push -u origin master\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><details class="custom-container details"><summary>Git 命令名词解释</summary><p><code>git remote add origin xxx.git</code>：创建和添加一个远程仓库连接</p><p><code>git add .</code>：将本地项目中所有文件添加到版本控制</p><p><code>git commit -m &#39;init&#39;</code>：将本地版本控制的文件添加到本地仓库，并备注信息为 init</p><p><code>git push -u origin master</code>：将本地仓库中文件推送至远程仓库</p></details><h4 id="后续提交" tabindex="-1"><a class="header-anchor" href="#后续提交" aria-hidden="true">#</a> 后续提交</h4><p>不同于首次提交，每当新增或者修改文章后，需要托管到 Github 时，除了git 命令执行，亦可以直接通过 VScode 客户端进行操作，具体操作步骤如下：</p><p>1.拉取</p><p>如果是跨平台使用，每次提交前先拉取，等同于<code>git pull</code>命令</p><p>2.提交</p><p>如果修改了文件，在源代码管理菜单中，在②处输入提交的备注信息，然后打勾，等同于<code>git commit</code>命令，将代码提交至本地仓库</p><p>2.推送</p><p>将本地仓库的内容提交至Github 远程仓库对应的分支中，等同于<code>git push</code>命令</p><h2 id="四、自动化部署" tabindex="-1"><a class="header-anchor" href="#四、自动化部署" aria-hidden="true">#</a> 四、自动化部署</h2><h3 id="创建脚本" tabindex="-1"><a class="header-anchor" href="#创建脚本" aria-hidden="true">#</a> 创建脚本</h3><p>在本地<code>swbook</code>目录下，创建新文件目录<code>.github/workflow</code>,并创建<code>main.yml</code>文件</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> swbook\n<span class="token function">mkdir</span> -p .github/workflow\n<span class="token builtin class-name">cd</span> .github/workflow\n<span class="token function">touch</span> main.yml\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="配置脚本" tabindex="-1"><a class="header-anchor" href="#配置脚本" aria-hidden="true">#</a> 配置脚本</h3><p>修改<code>main.yml</code>文件：</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">name</span><span class="token punctuation">:</span> Deploy GitHub Pages\n\n<span class="token comment"># 触发条件：在 push 到 master 分支后</span>\n<span class="token key atrule">on</span><span class="token punctuation">:</span>\n  <span class="token key atrule">push</span><span class="token punctuation">:</span>\n    <span class="token key atrule">branches</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> master\t<span class="token comment">#注意要和 Github仓库的分支名一致，有些人 Github 仓库默认是 main</span>\n\n<span class="token comment"># 任务</span>\n<span class="token key atrule">jobs</span><span class="token punctuation">:</span>\n  <span class="token key atrule">build-and-deploy</span><span class="token punctuation">:</span>\n    <span class="token comment"># 服务器环境：最新版 Ubuntu</span>\n    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest\n    <span class="token key atrule">steps</span><span class="token punctuation">:</span>\n      <span class="token comment"># 拉取代码</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Checkout\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v2\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token key atrule">persist-credentials</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>\n\n      <span class="token comment"># 1、生成静态文件</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Build\n        <span class="token key atrule">run</span><span class="token punctuation">:</span> npm install <span class="token important">&amp;&amp;</span> npm run docs<span class="token punctuation">:</span>build\n\n      <span class="token comment"># 2、部署到 GitHub Pages</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Deploy\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> JamesIves/github<span class="token punctuation">-</span>pages<span class="token punctuation">-</span>deploy<span class="token punctuation">-</span>action@releases/v3\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token key atrule">ACCESS_TOKEN</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.ACCESS_TOKEN <span class="token punctuation">}</span><span class="token punctuation">}</span>\t<span class="token comment"># Github 的 token</span>\n          <span class="token key atrule">REPOSITORY_NAME</span><span class="token punctuation">:</span> silentims/silentims.github.io\t<span class="token comment"># Github Pages 对应的仓库地址</span>\n          <span class="token key atrule">BRANCH</span><span class="token punctuation">:</span> master\t<span class="token comment"># Github Pages 对应的仓库的分支</span>\n          <span class="token key atrule">FOLDER</span><span class="token punctuation">:</span> docs/.vuepress/dist\t<span class="token comment">#注意这里的 docs/.vuepress/dist 表示的是 npm run docs:build 打包生成静态资源的路径，因为我们的目的是只需要将打包后的全部文件推送到 Github Pages 仓库即可，实在不清楚这个目录配置的对不对，可以先在本地执行 npm run docs:build，看看编译后的文件 dist 存在哪里，如果按照我上述的文件结构，不需要修改</span>\n          \n      <span class="token comment"># 3、部署到云服务器（不涉及可以注释或删除）</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> rsync deployments\n      \t<span class="token comment"># 关于该插件详细可阅读https://github.com/Burnett01/rsync-deployments</span>\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> burnett01/rsync<span class="token punctuation">-</span>deployments@5.0 \n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token comment"># 这里是 rsync 的参数 switches: -avzh --delete --exclude=&quot;&quot; --include=&quot;&quot; --filter=&quot;&quot;</span>\n          <span class="token key atrule">switches</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>avzh\n          <span class="token key atrule">path</span><span class="token punctuation">:</span> docs/.vuepress/dist/\t<span class="token comment"># github 源目录</span>\n          <span class="token key atrule">remote_path</span><span class="token punctuation">:</span> /root/nginx/www/\t<span class="token comment"># 云服务器目标目录</span>\n          <span class="token key atrule">remote_host</span><span class="token punctuation">:</span> techxiang.com\t<span class="token comment"># 这里可以是域名（域名已解析到云服务器）或者直接是云服务器公网ip</span>\n          <span class="token key atrule">remote_user</span><span class="token punctuation">:</span> root\t<span class="token comment"># 云服务器的用户</span>\n          <span class="token key atrule">remote_key</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.ALIYUN_RSA_PRIVATE_KEY <span class="token punctuation">}</span><span class="token punctuation">}</span>\t<span class="token comment"># 云服务器私钥</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br></div></div><p><strong>文件中的部分参数说明</strong></p><ul><li><code>on</code> 表示触发条件</li><li><code>jobs</code> 表示要做的工作</li><li><code>step</code> 表示要做的步骤，前一步失败，后面不会继续执行。</li><li><code>name</code> 表示 action 的名称，可以自定义</li><li><code>uses</code> 表示使用哪个插件，社区有很多优秀插件，可以直接搜索和使用</li><li><code>with</code> 表示传给插件的参数，一般在插件的主页都会有参数的使用说明</li></ul><p><strong>文件中参数涉及其他操作的说明</strong></p><ul><li><code>REPOSITORY_NAME</code>：silentims/silentims.github.io</li></ul><p>配置此项时，需要先去 Github 创建一个新库，Github Pages创建会依赖此库：</p><blockquote><p>必须为 public 项目，同时勾选创建 README 文件，目的是创建后不再是一个空库，自动化脚本推送时避免空库而报错</p></blockquote><ul><li><code>ACCESS_TOKEN</code>:</li></ul><p>此处涉及两处特殊的参数值：ACCESS_TOKEN 和 ALIYUN_RSA_PRIVATE_KEY，分别参考以下说明：</p><details class="custom-container details"><summary>为什么要使用密钥？</summary><p>为了安全，像令牌，TOKEN 、云服务器 ip 地址等这类重要信息，不能够暴露给其他人，或者你认为很重要的其他信息，不想别人看到，那么就使用 Github 提供的 secrets 功能，避免泄露</p></details><p><strong>1. secrets.ACCESS_TOKEN</strong></p><p>这个 ACCESS_TOKEN 是访问 GitHub API 的令牌，可以在 GitHub 主页，点击个人头像，Settings -&gt; Developer settings -&gt; Personal access tokens 进行生成或更新（权限选择 repo 相关的即可，如下图中橙色部分），第一次生成后你可以看到这个令牌，然后再也不会显示，因此你需要记下来，本篇假设生成的 TOKEN 令牌是 xxx</p><p>然后打开项目<code>swbook</code>的Setting -&gt; Secrets -&gt; New repository secret：</p><p>加入环境变量， name 是 ACCESS_TOKEN，value 是 xxx。保存。</p><p><strong>2.secrets.ALIYUN_RSA_PRIVATE_KEY</strong></p><blockquote><p>不涉及云服务器发布可以跳过不配置</p></blockquote><p>文件中这一项配置的是云服务器的私钥，一般情况下云服务器控制台都会提供一个私钥文件，如果服务器没有给你这个私钥，请自行登录云服务器生成一个可用于登录的私钥。</p><details class="custom-container details"><summary>为什么配置文件是私钥而不是公钥？</summary><p>因为 Github 自动化脚本运行时，属于创建连接的一段，会携带配置好的私钥访问云服务器，云服务器会拿到私钥解密，然后校验与<code>authorized_keys</code>中的公钥是否匹配，所以此处不要配置反了</p></details><p>以下是生成公钥、私钥的操作步骤：</p><ol><li>登录云服务器，查询或创建公钥、私钥：</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 查询目录下是否有 id_rsa 和 id_rsa.pub 前者是私钥，后者是公钥</span>\n<span class="token builtin class-name">cd</span> ~/.ssh\n<span class="token comment"># 若没有，则执行以下命令生成，这里生成 4096 位 RSA 密钥</span>\nssh-keygen -t rsa -b <span class="token number">4096</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ol start="2"><li><p>将<code>id_rsa.pub</code>公钥内容复制到同目录下的<code>authorized_keys</code>文件中</p></li><li><p>将<code>id_rsa</code> 私钥中的内容复制出来，然后到 GitHub 项目中添加为 Secrets（与 1 中配置 secrets.ACCESS_TOKEN 一样） 如下：</p></li></ol><h3 id="执行脚本" tabindex="-1"><a class="header-anchor" href="#执行脚本" aria-hidden="true">#</a> 执行脚本</h3><p>完成 yml 文件配置后，可以将此配置文件从本地提交并推送到 Github 中，此时进入项目所在仓库-&gt;Actions 即可查看执行情况，如果打钩则发布成功，报错的点进去查看具体错误信息，根据错误信息来不断修改配置文件参数即可</p><h3 id="网站访问" tabindex="-1"><a class="header-anchor" href="#网站访问" aria-hidden="true">#</a> 网站访问</h3><p>打开刚刚自动化部署到 Github Pages 的仓库，此时仓库中已经有了刚刚推送的静态网站文件，输入 https://silentims.github.io 即可访问(其中域名为创建的仓库名)</p><div class="custom-container tip"><p class="custom-container-title">恭喜 ~ 🎉 🎉 🎉</p><p>至此，自动化部署已完成 Github Pages 的部分，如果有自己的域名，GIthub Pages 也支持修改为域名访问。</p></div><div class="custom-container warning"><p class="custom-container-title">多说几句</p><p>如果觉得 Github Pages 访问速度不理想，可以将 Github 仓库替换为国内的 Gitee，此处不做拓展，原理是基本一样的，以上也是目前大部分采用的免费搭建博客的方案，毕竟云服务器也需要花钱购买，所以单纯需要一个静态博客，完全不需要购买云服务器，毕竟云服务器除了新用户优惠力度大，后续每年续费的成本还是不小的一笔开支。</p></div><h2 id="五、云服务器域名访问" tabindex="-1"><a class="header-anchor" href="#五、云服务器域名访问" aria-hidden="true">#</a> 五、云服务器域名访问</h2><div class="custom-container tip"><p class="custom-container-title">提示</p><p>前面已经将代码托管至 Github，同时通过 Action 脚本自动化部署发布到 Github Pages 和云服务器，Github Pages 可以直接访问到，但是推送到云服务器的静态网页文件却不能直接访问，所以本章目的就解决这个问题</p></div><details class="custom-container details"><summary>💡 输入网址后是如何访问到服务器上的静态文件的？</summary><p>比如，输入我的主站网址 techxiang.com，大致流程就是，电脑的浏览器解析你输入的网址，然后通过你使用的操作系统调用网卡，网卡会将访问的目标地址、访问者 ip、物理网关等信息，通过你所在的网络环境，比如从路由器到光猫，然后到宽带运营商，运营商再根据你输入的网址，层层向下解析，最后找到百度服务器的 ip 地址，因为 ip 地址与具体某一台服务器做了备案绑定，这样就能访问到服务器上的内容，随后再以原同样的方式将内容响应到你的电脑上，通过浏览器渲染页面，就完成了。</p></details><p>结合上面大致的流程，目前服务器上已经通过自动化部署后，有了静态资源文件，剩下只需要：</p><ul><li>注册一个域名，并将其解析到云服务器的 IP 上</li><li>云服务器安装 Nginx 来代理该域名发到服务器的访问请求并返回服务器上静态页面资源</li><li>提升用户访问安全性，还可以申请 HTTPS 证书，让网站支持 HTTPS 访问</li></ul>',54),Hn={id:"域名注册",tabindex:"-1"},In=(0,e._)("a",{class:"header-anchor",href:"#域名注册","aria-hidden":"true"},"#",-1),Vn=(0,e.Uk)(" 域名注册 "),On=(0,e.Uk)("可通过在阿里云的"),Rn={href:"https://wanwang.aliyun.com/domain",target:"_blank",rel:"noopener noreferrer"},Ln=(0,e.Uk)("域名注册"),Mn=(0,e.Uk)("上查询和注册一个域名，需要实名认证，同时注册成功后，建议进行备案，不然可能容易出现无法访问的情况。"),zn=(0,e._)("h3",{id:"域名解析",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#域名解析","aria-hidden":"true"},"#"),(0,e.Uk)(" 域名解析")],-1),Dn=(0,e._)("p",null,"登录阿里云控制台，进入产品服务 -> 域名，可以管理已注册生效的域名，我们需要将域名解析到云服务器的公网 ip 上",-1),Kn=(0,e._)("blockquote",null,[(0,e._)("p",null,"由于注册的域名，一般都是顶级域名，比如 techxiang.com，为了大众对网站普遍的认知度，我们新增两条解析记录，除了解析到 techxiang.com之外，另一条解析到 www.techxiang.com，即都支持访问")],-1),Yn=(0,e._)("ul",null,[(0,e._)("li",null,"记录类型：A"),(0,e._)("li",null,"主机记录：@ 和 www"),(0,e._)("li",null,"记录值：xx.xx.xx.xx (这是服务器的公网 ip)")],-1),$n=(0,e._)("p",null,"两条都新增后，如下图所示表示已经配置好，等待 10 分钟后生效",-1),Fn={id:"证书申请",tabindex:"-1"},Bn=(0,e._)("a",{class:"header-anchor",href:"#证书申请","aria-hidden":"true"},"#",-1),Jn=(0,e.Uk)(" 证书申请"),Qn=(0,e.uE)('<details class="custom-container details"><summary>SSL 证书的好处</summary><p>(1)保障用户隐私信息安全</p><p>(2)帮助用户识别钓鱼网站</p><p>(3)利于网站SEO优化</p><p>(4)提升公司品牌形象和可信度</p></details><p>HTTPS 证书根据安全性不同收费也不同，最基础的免费 SSL 证书，可以在阿里云控制台搜索”SSL 证书“申请，当然也可以去第三方有资质的平台免费申请，一般免费的有效期是三个月到一年左右。</p><h3 id="nginx安装与配置" tabindex="-1"><a class="header-anchor" href="#nginx安装与配置" aria-hidden="true">#</a> Nginx安装与配置</h3><div class="custom-container tip"><p class="custom-container-title">提示</p><p>网络上有很多安装的方法，此处不用原生下载后编译的方法，而使用 Docker 安装，并用挂载磁盘的方式管理和配置，简单方便</p></div><blockquote><p>docker 的安装此处暂不做详细描述，后续可能会补充进来</p></blockquote><h4 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>docker pull nginx\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">说明</p><p>第一次创建 nginx 镜像的目的是不启用挂载，直接创建一个默认镜像，然后复制镜像中 nginx 的配置文件到云服务器对应的目录，方便在此基础上做修改，然后第二次创建 nginx 启用挂载模式，直接使用刚刚磁盘中的配置文件</p></div><p>第一次创建 nginx 镜像</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>docker run -d --name nginx -p <span class="token number">80</span>:80 -d nginx\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>创建本地挂载目录</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">mkdir</span> nginx \n<span class="token builtin class-name">cd</span> nginx\n<span class="token comment"># 批量创建 nginx 目录文件夹、用于存放配置文件、日志、ssl 证书、静态资源 </span>\n<span class="token function">mkdir</span> -p conf/conf.d logs ssl www\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>复制镜像中<code>nginx.conf</code>和<code>default.conf</code>到本地磁盘</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 查看 nginx 运行时镜像的 CONTAINER ID</span>\ndocker <span class="token function">ps</span>\n<span class="token comment"># 复制 nginx.conf，其中 224d770c77e8 为镜像的 CONTAINER ID ，其中/etc/nginx/nginx.conf为镜像的路径，/root/nginx/conf为云服务器配置文件的路径</span>\ndocker <span class="token function">cp</span> 224d770c77e8:/etc/nginx/nginx.conf /root/nginx/conf\n<span class="token comment"># 复制 default.conf </span>\ndocker <span class="token function">cp</span> 224d770c77e8:/etc/nginx/conf.d/default.conf /root/nginx/conf/conf.d/default.conf\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>此时文件结构目录如下：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>nginx\t\t<span class="token comment"># nginx 配置根目录 手动创建</span>\n├── conf\t<span class="token comment"># 配置文件目录 手动创建</span>\n│   ├── conf.d\t<span class="token comment"># 手动创建</span>\n│   │   └── default.conf\t<span class="token comment"># 服务配置文件，由 docker 镜像复制而来</span>\n│   └── nginx.conf\t<span class="token comment"># 主配置文件，由 docker 镜像复制而来</span>\n├── logs\t<span class="token comment"># 日志目录 手动创建</span>\n├── ssl\t\t<span class="token comment"># https 证书，后面会用 手动创建</span>\n└── www\t\t<span class="token comment"># 静态网页资源，自动化部署将代码推送到此目录 手动创建</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>检查配置文件是否已经在对应的目录中，确认无误后停用现有 nginx 镜像</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 查看当前运行的 docker 镜像</span>\ndocker <span class="token function">ps</span>\n<span class="token comment"># 停用当前 nginx</span>\ndocker stop 224d770c77e8\n<span class="token comment"># 移除当前 nginx 镜像</span>\ndocker <span class="token function">rm</span> 224d770c77e8\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>再次创建 nginx 镜像，本次创建的镜像才是真正要使用的，参数多了许多磁盘挂载的参数，即镜像中对应的资源目录挂载到之前创建好的磁盘目录上，方便后续修改和使用</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 直接复制下面全部命令，粘贴到命令行运行（注意每行末尾都有个斜杠，是换行连接符）</span>\ndocker run -d <span class="token punctuation">\\</span>\n--name nginx <span class="token punctuation">\\</span>\n-p <span class="token number">80</span>:80 <span class="token punctuation">\\</span>\n-p <span class="token number">443</span>:443 <span class="token punctuation">\\</span>\n-v /root/nginx/www:/usr/share/nginx/html <span class="token punctuation">\\</span>\n-v /root/nginx/conf/nginx.conf:/etc/nginx/nginx.conf <span class="token punctuation">\\</span>\n-v /root/nginx/conf/conf.d/default.conf:/etc/nginx/conf.d/default.conf <span class="token punctuation">\\</span>\n-v /root/nginx/logs:/var/log/nginx <span class="token punctuation">\\</span>\n-v /root/nginx/ssl:/ssl <span class="token punctuation">\\</span>\n-d nginx\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><details class="custom-container details"><summary>-v 的参数说明</summary><p>说明</p><p><code>/root/nginx/www</code> 用于存放nginx 挂载的静态网站</p><p><code>/root/nginx/conf/nginx.conf</code>nginx 主配置文件</p><p><code>/root/nginx/conf/conf.d/default.conf</code>nginx 服务端配置文件</p><p><code>/root/nginx/conf/conf.d/default.conf</code>nginx 日志</p><p><code>/root/nginx/ssl</code>存放域名对应的 HTTPS 证书</p></details><p>创建成功后，可通过<code>docker ps</code>查询镜像启动的状态，启动成功的状态为<code>UP</code></p><h4 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h4><p>进入配置文件目录，修改代理服务的配置</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">vi</span> nginx/conf/conf.d default.conf\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>修改<code>default.conf</code>文件，提供未开启和开启 HTTPS 访问共两种版本参考</p><ol><li>未开启 https 版本配置</li></ol><details class="custom-container details"><summary>点击查看详细配置（修改处已加深显示）</summary><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>server <span class="token punctuation">{</span>\n    listen       <span class="token number">80</span><span class="token punctuation">;</span>  <span class="token comment">#侦听80端口，即默认开启 http 访问</span>\n    listen  <span class="token punctuation">[</span>::<span class="token punctuation">]</span>:80<span class="token punctuation">;</span>\n    server_name  techxiang.com,www.techxiang.com<span class="token punctuation">;</span>\t<span class="token comment"># 需要解析的域名，也就是前面申请和解析的域名地址</span>\n\n    <span class="token comment"># 定义首页索引目录和名称</span>\n    location / <span class="token punctuation">{</span>\n        root   /usr/share/nginx/html<span class="token punctuation">;</span>\n        index  index.html index.htm<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">#error_page  404              /404.html;</span>\n\n    <span class="token comment"># redirect server error pages to the static page /50x.html</span>\n    <span class="token comment"># 重定向错误页面到 /50x.html</span>\n    error_page   <span class="token number">500</span> <span class="token number">502</span> <span class="token number">503</span> <span class="token number">504</span>  /50x.html<span class="token punctuation">;</span>\n    location <span class="token operator">=</span> /50x.html <span class="token punctuation">{</span>\n        root   /usr/share/nginx/html<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span>\n    <span class="token comment">#</span>\n    <span class="token comment">#location ~ \\.php$ {</span>\n    <span class="token comment">#    proxy_pass   http://127.0.0.1;</span>\n        <span class="token comment">#}</span>\n\n    <span class="token comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span>\n    <span class="token comment">#</span>\n    <span class="token comment">#location ~ \\.php$ {</span>\n    <span class="token comment">#    root           html;</span>\n    <span class="token comment">#    fastcgi_pass   127.0.0.1:9000;</span>\n    <span class="token comment">#    fastcgi_index  index.php;</span>\n    <span class="token comment">#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span>\n    <span class="token comment">#    include        fastcgi_params;</span>\n    <span class="token comment">#}</span>\n\n    <span class="token comment"># deny access to .htaccess files, if Apache&#39;s document root</span>\n    <span class="token comment"># concurs with nginx&#39;s one</span>\n    <span class="token comment">#</span>\n    <span class="token comment">#location ~ /\\.ht {</span>\n    <span class="token comment">#    deny  all;</span>\n    <span class="token comment">#}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div></details><ol start="2"><li>开启 https 版本配置</li></ol><blockquote><p>开启 HTTPS 后，需要自行上传 HTTPS 证书<code>server.crt</code>和<code>·server.key</code>文件到 ssl 目录下</p></blockquote><details class="custom-container details"><summary>点击查看详细配置（增加带有 ssl 的参数，已加深显示）</summary><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>server <span class="token punctuation">{</span>\n    listen       <span class="token number">80</span><span class="token punctuation">;</span>  <span class="token comment">#侦听80端口，即默认开启 http 访问，如果强制所有的访问都必须是HTTPSS 话，80端口的都需要注销掉</span>\n    listen  <span class="token punctuation">[</span>::<span class="token punctuation">]</span>:80<span class="token punctuation">;</span>\n    listen    <span class="token number">443</span> ssl<span class="token punctuation">;</span>\n    server_name  techxiang.com,www.techxiang.com<span class="token punctuation">;</span>\t<span class="token comment"># 需要解析的域名，也就是前面申请和解析的域名地址</span>\n\n    <span class="token comment"># 增加ssl</span>\n    ssl on<span class="token punctuation">;</span>        <span class="token comment"># 如果强制HTTPs访问，这行要打开</span>\n    ssl_certificate /ssl/server.crt<span class="token punctuation">;</span>\t<span class="token comment"># https证书存放位置</span>\n    ssl_certificate_key /ssl/server.key<span class="token punctuation">;</span>\t<span class="token comment"># https证书存放位置</span>\n\n    ssl_session_cache    shared:SSL:1m<span class="token punctuation">;</span>\n    ssl_session_timeout  5m<span class="token punctuation">;</span>\n\n     <span class="token comment"># 指定密码为openssl支持的格式</span>\n     ssl_protocols  SSLv2 SSLv3 TLSv1.2<span class="token punctuation">;</span>\n\n     ssl_ciphers  HIGH:<span class="token operator">!</span>aNULL:<span class="token operator">!</span>MD5<span class="token punctuation">;</span>  <span class="token comment"># 密码加密方式</span>\n     ssl_prefer_server_ciphers  on<span class="token punctuation">;</span>   <span class="token comment"># 依赖SSLv3和TLSv1协议的服务器密码将优先于客户端密码</span>\n\n    <span class="token comment">#access_log  /var/log/nginx/host.access.log  main;</span>\n\n    <span class="token comment"># 定义首页索引目录和名称</span>\n    location / <span class="token punctuation">{</span>\n        root   /usr/share/nginx/html<span class="token punctuation">;</span>\n        index  index.html index.htm<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">#error_page  404              /404.html;</span>\n\n    <span class="token comment"># redirect server error pages to the static page /50x.html</span>\n    <span class="token comment"># 重定向错误页面到 /50x.html</span>\n    error_page   <span class="token number">500</span> <span class="token number">502</span> <span class="token number">503</span> <span class="token number">504</span>  /50x.html<span class="token punctuation">;</span>\n    location <span class="token operator">=</span> /50x.html <span class="token punctuation">{</span>\n        root   /usr/share/nginx/html<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span>\n    <span class="token comment">#</span>\n    <span class="token comment">#location ~ \\.php$ {</span>\n    <span class="token comment">#    proxy_pass   http://127.0.0.1;</span>\n        <span class="token comment">#}</span>\n\n    <span class="token comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span>\n    <span class="token comment">#</span>\n    <span class="token comment">#location ~ \\.php$ {</span>\n    <span class="token comment">#    root           html;</span>\n    <span class="token comment">#    fastcgi_pass   127.0.0.1:9000;</span>\n    <span class="token comment">#    fastcgi_index  index.php;</span>\n    <span class="token comment">#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span>\n    <span class="token comment">#    include        fastcgi_params;</span>\n    <span class="token comment">#}</span>\n\n    <span class="token comment"># deny access to .htaccess files, if Apache&#39;s document root</span>\n    <span class="token comment"># concurs with nginx&#39;s one</span>\n    <span class="token comment">#</span>\n    <span class="token comment">#location ~ /\\.ht {</span>\n    <span class="token comment">#    deny  all;</span>\n    <span class="token comment">#}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line"> </div><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br></div></div></details><p>都配置好后，重启 nginx</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 查询 nginx 镜像 id</span>\ndocker <span class="token function">ps</span>\n<span class="token comment"># 重启 nginx ,此处 e60222e0a641 为第二次 nginx 镜像 id</span>\ndocker restart e60222e0a641\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">恭喜 ~ 🎉 🎉 🎉</p><p>至此，服务器开启域名访问的相关配置已经完成，通过输入注册的域名，访问一下自己的网站吧</p></div>',34),Xn={render:function(n,s){const a=(0,e.up)("OutboundLink"),Xn=(0,e.up)("CodeGroupItem"),Zn=(0,e.up)("CodeGroup"),ns=(0,e.up)("Badge");return(0,e.wg)(),(0,e.iD)(e.HY,null,[p,(0,e._)("div",l,[t,(0,e._)("p",null,[c,(0,e._)("a",o,[r,(0,e.Wm)(a)]),i,(0,e._)("a",u,[b,(0,e.Wm)(a)]),m,(0,e._)("a",d,[k,(0,e.Wm)(a)]),h,(0,e._)("a",g,[v,(0,e.Wm)(a)]),_]),x]),f,(0,e._)("div",y,[w,(0,e._)("p",null,[S,(0,e._)("a",U,[P,(0,e.Wm)(a)])])]),E,(0,e.Wm)(Zn,null,{default:(0,e.w5)((()=>[(0,e.Wm)(Xn,{title:"Mac安装"},{default:(0,e.w5)((()=>[G])),_:1}),(0,e.Wm)(Xn,{title:"Win安装"},{default:(0,e.w5)((()=>[T])),_:1})])),_:1}),C,(0,e._)("div",q,[N,(0,e._)("p",null,[A,(0,e._)("a",j,[W,(0,e.Wm)(a)]),H])]),I,(0,e.Wm)(Zn,null,{default:(0,e.w5)((()=>[(0,e.Wm)(Xn,{title:"Mac安装"},{default:(0,e.w5)((()=>[V])),_:1}),(0,e.Wm)(Xn,{title:"Win安装"},{default:(0,e.w5)((()=>[O])),_:1})])),_:1}),R,L,(0,e._)("p",null,[M,(0,e._)("a",z,[D,(0,e.Wm)(a)]),K]),Y,$,(0,e._)("ul",null,[(0,e._)("li",null,[F,(0,e.Wm)(ns,{type:"danger",text:"待更新",vertical:"top"})]),(0,e._)("li",null,[B,(0,e.Wm)(ns,{type:"danger",text:"待更新",vertical:"top"})])]),J,(0,e._)("div",Q,[X,(0,e._)("p",null,[Z,(0,e._)("a",nn,[sn,(0,e.Wm)(a)]),an])]),en,(0,e._)("blockquote",null,[(0,e._)("p",null,[pn,(0,e._)("a",ln,[tn,(0,e.Wm)(a)])])]),cn,(0,e._)("div",on,[rn,(0,e._)("p",null,[un,(0,e._)("a",bn,[mn,(0,e.Wm)(a)])])]),dn,(0,e._)("blockquote",null,[(0,e._)("p",null,[kn,(0,e._)("a",hn,[gn,(0,e.Wm)(a)])])]),vn,(0,e._)("p",null,[_n,(0,e._)("a",xn,[fn,(0,e.Wm)(a)]),yn]),wn,(0,e._)("p",null,[Sn,(0,e._)("a",Un,[Pn,(0,e.Wm)(a)]),En,Gn,Tn]),Cn,qn,(0,e._)("h4",Nn,[An,jn,(0,e.Wm)(ns,{type:"danger",text:"待完善",vertical:"top"})]),Wn,(0,e._)("h3",Hn,[In,Vn,(0,e.Wm)(ns,{type:"danger",text:"待完善",vertical:"top"})]),(0,e._)("p",null,[On,(0,e._)("a",Rn,[Ln,(0,e.Wm)(a)]),Mn]),zn,Dn,Kn,Yn,$n,(0,e._)("h3",Fn,[Bn,Jn,(0,e.Wm)(ns,{type:"danger",text:"待完善",vertical:"top"})]),Qn],64)}}}}]);