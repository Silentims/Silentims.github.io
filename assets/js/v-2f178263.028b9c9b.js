"use strict";(self.webpackChunkswbook=self.webpackChunkswbook||[]).push([[185],{9224:(e,l,r)=>{r.r(l),r.d(l,{data:()=>a});const a={key:"v-2f178263",path:"/about/about-algorithm-daily-challenge.html",title:"LeetCode  21 天挑战日志",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"为什么参加算法挑战 ？",slug:"为什么参加算法挑战",children:[]},{level:2,title:"第一周 数组",slug:"第一周-数组",children:[]}],filePathRelative:"about/about-algorithm-daily-challenge.md"}},222:(e,l,r)=>{r.r(l),r.d(l,{default:()=>W});var a=r(6252);const t=(0,a.uE)('<h1 id="leetcode-21-天挑战日志" tabindex="-1"><a class="header-anchor" href="#leetcode-21-天挑战日志" aria-hidden="true">#</a> LeetCode 21 天挑战日志</h1><p>写一个流水式日志，来记录自己在参加 21 天算法挑战过程中，刷题遇到的问题和一些想法：</p><h2 id="为什么参加算法挑战" tabindex="-1"><a class="header-anchor" href="#为什么参加算法挑战" aria-hidden="true">#</a> 为什么参加算法挑战 ？</h2><ol><li>算法一直是自己久攻不下和很难坚持下去的弱项。</li><li>许多大厂目前基本上都要考算法，即便是中小厂也会涉及算法题，虽然社招岗位对算法要求没有那么高，但是不能完全不会。</li><li>培养算法的思维，我觉得学习算法就是学习计算机思维，从计算机的角度思考代码实现，在日后的实际工作中也能多一个分析角度，对了解许多技术底层原理和选择合适的底层数据结构都有所帮助。</li></ol><h2 id="第一周-数组" tabindex="-1"><a class="header-anchor" href="#第一周-数组" aria-hidden="true">#</a> 第一周 数组</h2>',5),n={class:"custom-container details"},o=(0,a._)("summary",null,"Day01 原地修改数组 (2021-08-19)",-1),u=(0,a.Uk)("今天是第一天，课程内容是「原地修改数组」，课程链接："),s={href:"https://www.yuque.com/docs/share/c0316f42-a685-422a-9060-4ec1c0bf0428?#",target:"_blank",rel:"noopener noreferrer"},i=(0,a.Uk)("《day1：原地修改数组》"),d=(0,a._)("p",null,"必做作业有 2 题：",-1),c={href:"https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array/",target:"_blank",rel:"noopener noreferrer"},h=(0,a.Uk)("26.删除排序数组中的重复项（简单）"),p={href:"https://leetcode-cn.com/problems/remove-element/",target:"_blank",rel:"noopener noreferrer"},m=(0,a.Uk)("27.移除元素（简单）"),_=(0,a._)("p",null,"选做题有 2 题：",-1),f={href:"https://leetcode-cn.com/problems/move-zeroes/",target:"_blank",rel:"noopener noreferrer"},b=(0,a.Uk)("283.移动零（简单）"),k={href:"https://leetcode-cn.com/problems/remove-duplicates-from-sorted-list/",target:"_blank",rel:"noopener noreferrer"},g=(0,a.Uk)("83.删除排序链表中的重复元素（简单）"),y=(0,a._)("ul",null,[(0,a._)("li",null,"整体感受：")],-1),v=(0,a._)("p",null,"首先 4 题中有 2 题在 4 个月前刷过，分别是 27 和 283，即移除元素和移动零，虽然刷过，但是看完题目，依旧没什么思路，简单看了下课件分析后，回想起了双指针，所以后面解题思路就清晰一些，但是实际编码的质量不高，居然还会存在语法的问题舒适不应该，其次判断条件的临界值没弄清楚，导致频繁出现数组越界的问题。不过比前几个月刷题的感觉要顺手多了，可能是最近看了许多与底层数据结构相关的内容有关系。",-1),w=(0,a._)("ul",null,[(0,a._)("li",null,"主要收获：")],-1),U=(0,a._)("p",null,"学习到有关数组双指针和链表入门的解题思路：",-1),x=(0,a._)("ol",null,[(0,a._)("li",null,"双指针如果都是从左开始移动遍历，那么其中有一个负责移动探路，另一个完成赋值或替换，其中优化的题解中，还引入中间临时变量temp来交换（移除零这题）看完题解后有被“哇”到；"),(0,a._)("li",null,"双指针也可以是左指针和右指针同时像中间移动，时间复杂度进一步降低；"),(0,a._)("li",null,"链表的解题思路关键点在于node中的next指向；")],-1),C=(0,a._)("details",{class:"custom-container details"},[(0,a._)("summary",null,"Day02 前缀和技巧 (2021-08-20)")],-1),W={render:function(e,l){const r=(0,a.up)("OutboundLink");return(0,a.wg)(),(0,a.iD)(a.HY,null,[t,(0,a._)("details",n,[o,(0,a._)("p",null,[u,(0,a._)("a",s,[i,(0,a.Wm)(r)])]),d,(0,a._)("p",null,[(0,a._)("a",c,[h,(0,a.Wm)(r)])]),(0,a._)("p",null,[(0,a._)("a",p,[m,(0,a.Wm)(r)])]),_,(0,a._)("p",null,[(0,a._)("a",f,[b,(0,a.Wm)(r)])]),(0,a._)("p",null,[(0,a._)("a",k,[g,(0,a.Wm)(r)])]),y,v,w,U,x]),C],64)}}}}]);